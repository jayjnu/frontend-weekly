---
layout: post
title:  "9월 4째주 주간 프론트엔드 포스팅"
date:   2017-09-22 22:25:52 +0900
categories: headlines
author: "by jayjnu"
---

1. [Mordern Javascript Cheatsheet](https://github.com/mbeaudru/modern-js-cheatsheet)
- "ES6 컨닝페이퍼"
- 익숙하지 않으면 난처한 ES6및 자바스크립트 문법 및 속성에 대해 잘 정리해둔 Repository

2. [event.currentTarget vs event.target](https://codepen.io/vikas-parashar/full/WZxrYX/)
- 이벤트 핸들러에 전달되는 event 파라미터의 event.target과 event.currentTarget이 어떻게 적용되는지 한눈에 이해할 수 있는 codepen 예제

3. [(Now More Than Ever) You Might Not Need jQuery](https://css-tricks.com/now-ever-might-not-need-jquery/)
- "더이상 jQuery를 사용하지 않아도 될 이유"
- 제각각이었던 과거 브라우저 환경과 달리 현재의 DOM API는 표준화가 잘 돼있다.
- 심지어 현재 표준화 된 DOM API는 jQuery에서 영향을 받은 것도 있다.
- 과거 jQuery가 없으면 어려웠던 utility성 기능이 브라우저에서 기본제공되고있다 (e.g. animation)
- 한가지 기능에 충실한 '마이크로 라이브러리'가 득세하고있다
- 기타등등

4. [맥북프로 터치바에 웹팩 빌드 프로그레스 보이게 하는 법](https://swizec.com/blog/livecoding-recap-47-webpack-build-progress-indicator-mac-touchbar/swizec/7808)

5. [드디어 사용가능하다! Promise.prototype.finally()](https://hospodarets.com/promise.prototype.finally)
- Promise의 등장으로 Callback Hell에서 탈출했지만 success, fail에 관계없이 실행될 콜백(e.g. jQuery.deferred.always())이 없어 불편함이 있었다.
- ajax콜 전에 로딩아이콘을 보여주고 ajax콜이 끝나면 결과와 관계없이 로딩아이콘을 사라지게 하는 함수를 만들어보자
```javascript
function updateModel(json) {
    ...
}
function handleResponseError(err) {
    ...
}
function showLoadingIcon() {
    ...
}
function hideLoadingIcon() {
    ...
}
```
- Finally가 없을 때
```javascript
function ajax(option) {
    showLoadingIcon();
    fetch(option)
        .then((res => res.json())
        .then((json) => {
            updateModel(json);
            hideLoadingIcon();
        });
        .catch((err) => {
            handleResponseError(err);
            hideLoadingIcon();
        )
}
```
- Finally를 사용할 때
```javascript
function ajax(option) {
    showLoadingIcon();
    fetch(option)
        .then((res => res.json())
        .then(updateModel);
        .catch(handleResponseError);
        .finally(hideLoadingIcon)
}
```

6. [What's new in Node.js 8.5?](https://blog.risingstack.com/whats-new-in-node-js-8-5/)
- "Node.js 8.5 버전에 추가된 기능들"
- import 와 같은 ECMAScript 모듈 키워드 사용가능
- 코드 퍼포먼스 체크 헬퍼 "Performance Hook" 모듈 추가
- fs.copyFile로 파일 간단히 복사 가능
